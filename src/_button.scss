/************************************************************
BUTTON
************************************************************/
/************************************************************
Including size eXtra-Small .btn-xs and btn-group-xs as in Bootstrap 5
Include btn-sizes when inside a btn-bar
************************************************************/
.btn-xs {
    @include button-size(
        $padding-y    : $btn-padding-y-xs,
        $padding-x    : $btn-padding-x-xs,
        $font-size    : $btn-font-size-xs,
        $border-radius: $btn-border-radius-xs
    );
}
.btn-group-xs > .btn { @extend .btn-xs; }

.btn-bar-sm > .btn { @extend .btn-sm; }
.btn-bar-xs > .btn { @extend .btn-xs; }


/************************************************************
To be able to control font-family etc. 'buttons'
can be created as <div>
cursor-style added to prevent text-cursor on buttons
Also overwrite default bootstrap behaviour
************************************************************/
/*
@mixin button-variant(
  $background,
  $border,
  $color: color-contrast($background),
  $hover-background: if($color == $color-contrast-light, shade-color($background, $btn-hover-bg-shade-amount), tint-color($background, $btn-hover-bg-tint-amount)),
  $hover-border: if($color == $color-contrast-light, shade-color($border, $btn-hover-border-shade-amount), tint-color($border, $btn-hover-border-tint-amount)),
  $hover-color: color-contrast($hover-background),
  $active-background: if($color == $color-contrast-light, shade-color($background, $btn-active-bg-shade-amount), tint-color($background, $btn-active-bg-tint-amount)),
  $active-border: if($color == $color-contrast-light, shade-color($border, $btn-active-border-shade-amount), tint-color($border, $btn-active-border-tint-amount)),
  $active-color: color-contrast($active-background),
  $disabled-background: $background,
  $disabled-border: $border,
  $disabled-color: color-contrast($disabled-background)
) {

*/

.btn-#{$btn-style-name}{

    //Horizontal and vertical center using flex-box
    display        : inline-flex;
    align-items    : center;
    justify-content: center;

    //Set default border-colors for buttons
    --#{$prefix}btn-border-color        : #{$jb-element-border-color};
    --#{$prefix}btn-hover-border-color  : #{$jb-element-hover-border-color};
    --#{$prefix}btn-active-border-color : #{$jb-element-active-and-focus-border-color};

    //Force all buttons to have same light blue box-shadow when in focus
    --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($component-active-bg)};

    //*********************************************************
    //Standard color = light white
    &.standard {
        @include button-variant(
            $background         : $jb-btn-standard-background-color,
            $hover-background   : $jb-btn-standard-hover-background-color,
            $active-background  : $jb-btn-standard-active-background-color,

            $border             : $jb-element-border-color,
            $hover-border       : $jb-element-hover-border-color,
            $active-border      : $jb-element-active-and-focus-border-color,

            $color              : $jb-element-color,
            $hover-color        : $jb-element-hover-color,
            $active-color       : $jb-element-active-color,
            $disabled-color     : $jb-element-disabled-color
        );

        //Overwrite focus shadow again
        --#{$prefix}btn-focus-shadow-rgb: #{to-rgb($component-active-bg)};
    }

    //*********************************************************
    //primary = border and text in primary color
    &.primary {
        //Text-color = primary, Border-color = primary
        @include button-text-color-variant( $primary );
        @include button-border-color-variant( $primary );
    }

    //*********************************************************
    //selected = background in selected-blue color
    &.selected {
        @include button-background-color-variant( $form-check-input-checked-bg-color );
        @include button-text-color-variant( $form-check-input-checked-color );
    }

    //Standard checkbox-button = Button with radio or checkbox-icon with blue color when selected (=checked)
    &.standard-checkbox {
        .standard-checkbox-checked-color {
            color: $form-check-input-checked-bg-color;
        }

        //Special version where the checkbox is to the left
        &.checkbox-at-left {
            position: relative;
            & > .container-stacked-icons {
                position: absolute;
                left    : var(--bs-btn-padding-x);
            }
        }
    }

    &.standard-checkbox.semi-selected {
        .standard-checkbox-checked-color {
            color: $form-check-input-indeterminate-bg-color;
        }
    }


    //Semi-selected - but not for standard radio/checkbox button
    &.semi-selected:not(.standard-checkbox) {
        @include button-background-color-variant( $form-check-input-indeterminate-bg-color );
        @include button-text-color-variant( $form-check-input-checked-color );
    }

    //*********************************************************
    //Special version to have transparent button
    //transparent = normal/dark color on light background
    //transparent-on-dark = Light color on dark background
    //semi-transparent
    &.transparent, &.transparent-on-dark {
        --#{$prefix}btn-bg       : none;
        --#{$prefix}btn-hover-bg : rgba( #{to-rgb($jb-btn-standard-hover-background-color)} , .10 );
        --#{$prefix}btn-active-bg: rgba( #{to-rgb($jb-btn-standard-active-background-color)}, .15 );

        --#{$prefix}btn-border-color       : #{ color-opacity( $jb-element-border-color, .10 ) };
        --#{$prefix}btn-hover-border-color : #{ color-opacity( $jb-element-border-color, .15 ) };
        --#{$prefix}btn-active-border-color: #{ color-opacity( $jb-element-border-color, .20 ) };
    }

    &.transparent-on-dark {
        @include button-text-color-variant( $color-contrast-light );
    }

    &.semi-transparent:not(.selected) {
        --#{$prefix}btn-bg       : rgba( #{to-rgb($jb-btn-standard-background-color)}       , #{$jb-element-semi-transparent-opacity}        );
        --#{$prefix}btn-hover-bg : rgba( #{to-rgb($jb-btn-standard-hover-background-color)} , #{$jb-element-semi-transparent-hover-opacity}  );
        --#{$prefix}btn-active-bg: rgba( #{to-rgb($jb-btn-standard-active-background-color)}, #{$jb-element-semi-transparent-active-opacity} );
    }


    //*********************************************************
    //Overwrite Bootstrap default opacity for disabled buttons when class .show-as-normal is added
    &.show-as-normal {
        --#{$prefix}btn-disabled-opacity: 1;
    }

    &.no-border {
        border-color: transparent !important;
    }

    &.no-shadow {
        box-shadow: none !important;
    }

    //min-width used for buttons with short text ("Ok")
    &.min-width {
        min-width: 5em !important;
    }

    //*********************************************************
    //Icons in buttons get equal size to allow shift of icon
    & > i.fa {
        min-width : 1em;
        text-align: left;
        &:only-child {
            text-align: center;
        }
    }

    //Containers for stacked icons get same size as single icon
    & > span.fa-stack {
        width         : 1em;
        height        : 1em;
        line-height   : 1.5 * $btn-font-size-sm;
        vertical-align: top;
    }


    //************************************************************
    //Special version to have square buttons (with only icon)
    &.square {
        --#{$prefix}btn-padding-y: 0;
        --#{$prefix}btn-padding-x: 0;

        height: var(--#{$prefix}btn-square-dimention);
        width : var(--#{$prefix}btn-square-dimention);

        &:not(.big-square){
            --#{$prefix}btn-square-dimention: #{$button-square-dimension};
            &.btn-sm {
                --#{$prefix}btn-square-dimention: #{$button-square-dimension-sm};
            }
            &.btn-xs {
                --#{$prefix}btn-square-dimention: #{$button-square-dimension-xs};
            }
        }

        &.big-square {
            --#{$prefix}btn-square-dimention: #{$button-big-square-dimension};
            &.btn-sm {
                --#{$prefix}btn-square-dimention: #{$button-big-square-dimension-sm};
            }
            &.btn-xs {
                --#{$prefix}btn-square-dimention: #{$button-big-square-dimension-xs};
            }
        }

        //.big-icon = Extra big icons
        &.big-icon          {
            --#{$prefix}btn-font-size: #{roundRem($btn-font-size    * $button-big-scale )};
        }
        &.btn-sm.big-icon   {
            --#{$prefix}btn-font-size: #{roundRem( $btn-font-size-sm * $button-big-scale )};
        }
        &.btn-xs.big-icon   {
            --#{$prefix}btn-font-size: #{roundRem( $btn-font-size-xs * $button-big-scale )};
        }

        //Center icon and make space for icons with width > height
        & > i.fa {
            width     : 1.25em; //Same as fa-fw
            height    : 1em;
            text-align: center;
        }
    }

    //Extra-extra large icon => The button gets bigger
    &.extra-large-icon {
        --#{$prefix}btn-line-height: 1;
        --#{$prefix}btn-padding-y  : 0.25rem;
        --#{$prefix}btn-padding-x  : 0.25rem;
        --#{$prefix}btn-font-size  : 2rem;

        flex-direction : row;
        align-items    : center;
        justify-content: center;
    }

    //Smaller or larger content
    --#{$prefix}btn-smaller-font-size: #{$input-btn-font-size-sm};
    --#{$prefix}btn-larger-font-size : #{$input-btn-font-size-lg};

    .font-size-larger {
        font-size: var(--#{$prefix}btn-larger-font-size);
    }
    .font-size-smaller {
        font-size: var(--#{$prefix}btn-smaller-font-size);

    }

    &.btn-lg {
        --#{$prefix}btn-smaller-font-size: #{$input-btn-font-size};
        --#{$prefix}btn-larger-font-size : #{$input-btn-font-size-lg};
    }
    &.btn-sm {
        --#{$prefix}btn-smaller-font-size: #{$input-btn-font-size-xs};
        --#{$prefix}btn-larger-font-size : #{$input-btn-font-size};
    }
}




/************************************************************
Modernizr-test for elements with class="hide-for-selected" or "show-for-selected"
************************************************************/
@include show-and-hide-for-modernizr-test(
	$modernizr-test     : 'selected',
	$parent-element-type: #{'.btn-'+ $btn-style-name},
    $incl-table-display : false
);



/************************************************************
BUTTON-GROUP
************************************************************/
//Buttons in vertical button-groups with left-aligned contents (default = center)
.btn-group-vertical.btn-group-left > .btn {
    @extend .text-left;
}

//Vertical button-group insides in popover and vertical button-group with full width: width = 100%
.popover-body .btn-group-vertical,
.btn-group-vertical.btn-group-full-width {
    @extend .w-100;
}

//Vertical button-group with no round border on buttons
.btn-group-vertical.btn-group-no-round-border > .btn {
    border-radius: 0;
}


//Horizontal button-group inside input-group or with full width gets equal width
.input-group .btn-group,
.btn-group:not(.btn-group-vertical).btn-group-full-width {
    display: flex;
    width  : 100%;
    .btn {
        flex: 1 0 10px;
    }
}

//Horizontal button-group centered in it parent
.btn-group:not(.btn-group-vertical).btn-group-center-in-parent {
    width  : auto;
    margin : auto;
    display: block;
}

//With border
.btn-group, .btn-group-vertical {
    &.btn-group-border {
        border: 1px solid $jb-structure-border-color;
        border-radius: $btn-border-radius;
        &.btn-group-sm {
            border-radius: $btn-border-radius-sm;
        }
        &.btn-group-xs {
            border-radius: $btn-border-radius-xs;
        }
    }
}

//Header inside button-group gets same font-size as the buttons
.btn-group .header-content-container,
.btn-group-vertical .header-content-container {
    font-size: var(--#{$prefix}modal-content-font-size);
}


//Header inside button-group
.btn-group, .btn-group-vertical {
    .header-content {
        color           : var(--#{$jb-prefix}inner-header-color);
        background-color: var(--#{$jb-prefix}inner-header-bg);

        &.header-main {
            color           : var(--#{$jb-prefix}header-color);
            background-color: var(--#{$jb-prefix}header-bg);
        }
    }
}


.btn-group-vertical {
    //Align all icons in vertical button group to width = 1.25em
    .btn.container-icon-and-text {
        & > i, & > .container-stacked-icons {
            width     : 1.25em;
            text-align: center;
        }
    }

    //First button after header and first child inside a group inside a group gets not-round top border
    & .header-content-container + .btn:not(.after-space),
    & .btn-group-vertical .btn:not(.after-space) {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
    }
}



/*
To have a space between two button-groups
the button-group before the space gets class="after-space"
*/
.btn-group.space-after {
    margin-right: var(--#{$prefix}modal-header-padding-x);
}
.btn-group-vertical.space-after {
    margin-bottom: var(--#{$prefix}modal-header-padding-y);
}


/*
To have a space between two buttons in a (vertical) button-group
the button before the space gets class="after-space"
*/
.btn-group-vertical {
    .space-after {
        margin-bottom: var(--#{$prefix}modal-header-padding-y);
        border-bottom-left-radius : var(--#{$prefix}btn-border-radius) !important;
        border-bottom-right-radius: var(--#{$prefix}btn-border-radius) !important;

        &  + .btn{
            border-top-left-radius : var(--#{$prefix}btn-border-radius) !important;
            border-top-right-radius: var(--#{$prefix}btn-border-radius) !important;
        }
    }
}

//Size - small and extra-small
@include header-content-footer-variant(".btn-group-vertical.btn-group");


/************************************************************
MENU (BUTTON-GROUP)
************************************************************/
.bs-menu-container {
    hr {
        width: 100%;
        margin: $input-btn-padding-y 0;
        padding: 0;
    }
    hr.first.before, hr.last.after, hr + hr {
        display: none;
    }
}


/************************************************************
BUTTON-BAR
************************************************************/
.btn-bar {
    .btn {
        min-width: var(--bs-btn-square-dimention);
        &:not(:first-child) {
            margin-left: 2px;
        }
    }
}


/************************************************************
BUTTON-SELECT
************************************************************/
.btn-select {
    display     : flex;
    align-items : center;

    &::after {
        background-image : #{escape-svg($accordion-button-icon)};
        flex-shrink      : 0;
        width            : $accordion-icon-width;
        height           : $accordion-icon-width;
        margin-left      : auto;
        content          : "";
        background-repeat: no-repeat;
        background-size  : $accordion-icon-width;
    }

}

/************************************************************
btn-shadow and btn-shadow-sm
classes to create "shadow-buttons" = invisible square buttons for correct spacing
************************************************************/
.btn-shadow, .btn-shadow-sm {
    display   : inline-block;
    margin    : 0;
    padding   : 0;
    border    : none;
    visibility: hidden;
}
.btn-shadow {
    width : $button-square-dimension;
    height: $button-square-dimension;
}

.btn-shadow-sm {
    width : $button-square-dimension-sm;
    height: $button-square-dimension-sm;
}

/************************************************************
btn-round-border
classes to create force round border despise placement
************************************************************/
.btn-round-border {
    border-radius: var(--#{$prefix}btn-border-radius) !important;
}
